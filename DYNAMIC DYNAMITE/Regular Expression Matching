class Solution {
    public boolean isMatch(String s, String p) {
        // approach: DP with 3 logic
        // along with base logic to deal with 0th row

        boolean T[][]= new boolean[s.length()+1][p.length()+1];

        T[0][0]=true;
        // edgecase
        // sets 0th row 'true' when there is a pattern like a*, a*b*, a*b*c*
        for(int i=1; i<T[0].length; i++){
            if(p.charAt(i-1)=='*'){
                T[0][i]=T[0][i-2];
            }
        }

        for(int i=1; i<T.length; i++){
            for(int j=1; j<T[0].length; j++){
                //logic 1
                if(s.charAt(i-1)==p.charAt(j-1) || p.charAt(j-1)=='.'){
                    T[i][j]=T[i-1][j-1];
                }
                //logic 2
                else if(p.charAt(j-1)=='*'){
                    T[i][j]=T[i][j-2];
                //logic 3
                    if(p.charAt(j-2)==s.charAt(i-1) || p.charAt(j-2)=='.'){
                        T[i][j]=T[i-1][j] | T[i][j];
                    }
                }
                else{
                    T[i][j]=false;
                }
            }
        }
        return T[s.length()][p.length()];

    }
}
